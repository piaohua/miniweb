// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: game_code.proto

package pb

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

import strconv "strconv"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ErrCode int32

const (
	OK                ErrCode = 0
	RegistFailed      ErrCode = 1
	LoginFailed       ErrCode = 2
	PropNotEnough     ErrCode = 3
	GateUnreachable   ErrCode = 4
	EnergyNotEnough   ErrCode = 5
	CoinNotEnough     ErrCode = 6
	DiamondNotEnough  ErrCode = 7
	AlreadyAward      ErrCode = 8
	AwardFailed       ErrCode = 9
	OrderFailed       ErrCode = 10
	Failed            ErrCode = 11
	WSGetFailed       ErrCode = 12
	WSLoginFailed     ErrCode = 13
	SetShopFailed     ErrCode = 14
	SetPropFailed     ErrCode = 15
	SetPrizeFailed    ErrCode = 16
	SetGateFailed     ErrCode = 17
	EnergyEnough      ErrCode = 18
	UserNotExist      ErrCode = 19
	AlreadyInvite     ErrCode = 20
	SetShareFailed    ErrCode = 21
	SetInviteFailed   ErrCode = 22
	FightCreateFailed ErrCode = 23
	FightChangeFailed ErrCode = 24
	FightRoomFull     ErrCode = 25
	FightRoomNotExist ErrCode = 26
	FightStartFailed  ErrCode = 27
	FightExitFailed   ErrCode = 28
	FightNotInRoom    ErrCode = 29
	FightNotStart     ErrCode = 30
	FightMatchFailed  ErrCode = 31
)

var ErrCode_name = map[int32]string{
	0:  "OK",
	1:  "RegistFailed",
	2:  "LoginFailed",
	3:  "PropNotEnough",
	4:  "GateUnreachable",
	5:  "EnergyNotEnough",
	6:  "CoinNotEnough",
	7:  "DiamondNotEnough",
	8:  "AlreadyAward",
	9:  "AwardFailed",
	10: "OrderFailed",
	11: "Failed",
	12: "WSGetFailed",
	13: "WSLoginFailed",
	14: "SetShopFailed",
	15: "SetPropFailed",
	16: "SetPrizeFailed",
	17: "SetGateFailed",
	18: "EnergyEnough",
	19: "UserNotExist",
	20: "AlreadyInvite",
	21: "SetShareFailed",
	22: "SetInviteFailed",
	23: "FightCreateFailed",
	24: "FightChangeFailed",
	25: "FightRoomFull",
	26: "FightRoomNotExist",
	27: "FightStartFailed",
	28: "FightExitFailed",
	29: "FightNotInRoom",
	30: "FightNotStart",
	31: "FightMatchFailed",
}
var ErrCode_value = map[string]int32{
	"OK":                0,
	"RegistFailed":      1,
	"LoginFailed":       2,
	"PropNotEnough":     3,
	"GateUnreachable":   4,
	"EnergyNotEnough":   5,
	"CoinNotEnough":     6,
	"DiamondNotEnough":  7,
	"AlreadyAward":      8,
	"AwardFailed":       9,
	"OrderFailed":       10,
	"Failed":            11,
	"WSGetFailed":       12,
	"WSLoginFailed":     13,
	"SetShopFailed":     14,
	"SetPropFailed":     15,
	"SetPrizeFailed":    16,
	"SetGateFailed":     17,
	"EnergyEnough":      18,
	"UserNotExist":      19,
	"AlreadyInvite":     20,
	"SetShareFailed":    21,
	"SetInviteFailed":   22,
	"FightCreateFailed": 23,
	"FightChangeFailed": 24,
	"FightRoomFull":     25,
	"FightRoomNotExist": 26,
	"FightStartFailed":  27,
	"FightExitFailed":   28,
	"FightNotInRoom":    29,
	"FightNotStart":     30,
	"FightMatchFailed":  31,
}

func (ErrCode) EnumDescriptor() ([]byte, []int) { return fileDescriptorGameCode, []int{0} }

func init() {
	proto.RegisterEnum("pb.ErrCode", ErrCode_name, ErrCode_value)
}
func (x ErrCode) String() string {
	s, ok := ErrCode_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}

func init() { proto.RegisterFile("game_code.proto", fileDescriptorGameCode) }

var fileDescriptorGameCode = []byte{
	// 433 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0xd2, 0xcd, 0x8e, 0xd3, 0x30,
	0x10, 0x07, 0xf0, 0xb8, 0x2c, 0x59, 0xf0, 0x7e, 0xc4, 0xf5, 0xee, 0xf2, 0x8d, 0xb9, 0x23, 0xc4,
	0x85, 0x27, 0x58, 0x4a, 0xba, 0x5a, 0x01, 0x5d, 0xb4, 0xd1, 0xaa, 0x47, 0xe4, 0x36, 0xa3, 0xc4,
	0x52, 0x6a, 0x47, 0xae, 0x0b, 0x2d, 0x27, 0x1e, 0x81, 0xc7, 0xe0, 0x51, 0x38, 0xf6, 0xc8, 0x91,
	0x86, 0x0b, 0x12, 0x97, 0x3e, 0x02, 0x9a, 0xd4, 0x49, 0xb8, 0x59, 0xbf, 0x8c, 0x67, 0xe6, 0x6f,
	0x85, 0x46, 0x99, 0x9c, 0xc1, 0xc7, 0xa9, 0x49, 0xe1, 0x65, 0x69, 0x8d, 0x33, 0xbc, 0x57, 0x4e,
	0x9e, 0xff, 0xdd, 0xa3, 0xfb, 0xb1, 0xb5, 0x03, 0x93, 0x02, 0x0f, 0x69, 0xef, 0xea, 0x2d, 0x0b,
	0x38, 0xa3, 0x87, 0xd7, 0x90, 0xa9, 0xb9, 0x1b, 0x4a, 0x55, 0x40, 0xca, 0x08, 0x8f, 0xe8, 0xc1,
	0x3b, 0x93, 0x29, 0xed, 0xa1, 0xc7, 0xfb, 0xf4, 0xe8, 0x83, 0x35, 0xe5, 0xc8, 0xb8, 0x58, 0x9b,
	0x45, 0x96, 0xb3, 0x5b, 0xfc, 0x84, 0x46, 0x17, 0xd2, 0xc1, 0x8d, 0xb6, 0x20, 0xa7, 0xb9, 0x9c,
	0x14, 0xc0, 0xf6, 0x10, 0x63, 0x0d, 0x36, 0x5b, 0x75, 0x95, 0xb7, 0xf1, 0xf2, 0xc0, 0x28, 0xdd,
	0x51, 0xc8, 0x4f, 0x29, 0x7b, 0xa3, 0xe4, 0xcc, 0xe8, 0xb4, 0xd3, 0x7d, 0x5c, 0xe4, 0xbc, 0xb0,
	0x20, 0xd3, 0xd5, 0xf9, 0x67, 0x69, 0x53, 0x76, 0x07, 0x17, 0xa9, 0x8f, 0x7e, 0x91, 0xbb, 0x08,
	0x57, 0x36, 0x05, 0xeb, 0x81, 0x72, 0x4a, 0x43, 0x7f, 0x3e, 0xc0, 0x8f, 0xe3, 0xe4, 0x02, 0x9a,
	0x1c, 0x87, 0x38, 0x79, 0x9c, 0xfc, 0x9f, 0xe4, 0x08, 0x29, 0x01, 0x97, 0xe4, 0xa6, 0xf4, 0x74,
	0xec, 0x09, 0xf3, 0x79, 0x8a, 0x38, 0xa7, 0xc7, 0x35, 0xa9, 0x2f, 0xe0, 0x8d, 0xf9, 0x32, 0xcc,
	0xec, 0xa9, 0x8f, 0x0b, 0xef, 0xe2, 0xfa, 0x08, 0x1c, 0xe5, 0x66, 0x0e, 0x16, 0x53, 0x2d, 0xd5,
	0xdc, 0xb1, 0x13, 0xbc, 0xe6, 0x43, 0x5d, 0xea, 0x4f, 0xca, 0x01, 0x3b, 0xf5, 0xdd, 0x93, 0x5c,
	0xda, 0xa6, 0xd5, 0x19, 0xbe, 0x5c, 0x02, 0x6e, 0x57, 0xe2, 0xf1, 0x1e, 0x3f, 0xa3, 0xfd, 0xa1,
	0xca, 0x72, 0x37, 0xb0, 0xd0, 0x8d, 0xbd, 0xdf, 0x71, 0x2e, 0x75, 0xd6, 0xf0, 0x03, 0x9c, 0x54,
	0xf3, 0xb5, 0x31, 0xb3, 0xe1, 0xa2, 0x28, 0xd8, 0xc3, 0xb6, 0x12, 0xa9, 0xdd, 0xe9, 0x11, 0x3e,
	0x7f, 0xcd, 0x89, 0x93, 0xb6, 0x79, 0xad, 0xc7, 0xb8, 0x42, 0xad, 0xf1, 0x52, 0x35, 0xf8, 0x04,
	0x77, 0xad, 0x71, 0x64, 0xdc, 0xa5, 0xc6, 0x36, 0xec, 0x69, 0x3b, 0x68, 0x64, 0x76, 0x1d, 0x98,
	0x68, 0x3b, 0xbe, 0x97, 0x6e, 0x9a, 0xfb, 0xcb, 0xcf, 0x5e, 0xbf, 0x58, 0x6f, 0x44, 0xf0, 0x73,
	0x23, 0x82, 0xed, 0x46, 0x90, 0xaf, 0x95, 0x20, 0xdf, 0x2b, 0x41, 0x7e, 0x54, 0x82, 0xac, 0x2b,
	0x41, 0x7e, 0x55, 0x82, 0xfc, 0xa9, 0x44, 0xb0, 0xad, 0x04, 0xf9, 0xf6, 0x5b, 0x04, 0x93, 0xb0,
	0xfe, 0x4d, 0x5f, 0xfd, 0x0b, 0x00, 0x00, 0xff, 0xff, 0xe0, 0xae, 0x99, 0x90, 0xb9, 0x02, 0x00,
	0x00,
}
