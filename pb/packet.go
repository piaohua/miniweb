// Code generated by tool/gen.go.
// DO NOT EDIT!

package pb

import (
	"errors"
)

//Packet 打包消息
func Packet(msg interface{}) (uint32, uint32, []byte, error) {
	switch msg.(type) {
	case *SWxLogin:
		b, err := msg.(*SWxLogin).Marshal()
		return 1001, 0, b, err
	case *SLogin:
		b, err := msg.(*SLogin).Marshal()
		return 1002, 0, b, err
	case *SLoginOut:
		b, err := msg.(*SLoginOut).Marshal()
		return 1003, 0, b, err
	case *SUserData:
		b, err := msg.(*SUserData).Marshal()
		return 1004, 0, b, err
	case *SGateData:
		b, err := msg.(*SGateData).Marshal()
		return 1005, 0, b, err
	case *SPing:
		b, err := msg.(*SPing).Marshal()
		return 1006, 0, b, err
	case *SPropData:
		b, err := msg.(*SPropData).Marshal()
		return 1007, 0, b, err
	case *SGetCurrency:
		b, err := msg.(*SGetCurrency).Marshal()
		return 1008, 0, b, err
	case *SPushProp:
		b, err := msg.(*SPushProp).Marshal()
		return 1010, 0, b, err
	case *SShop:
		b, err := msg.(*SShop).Marshal()
		return 1011, 0, b, err
	case *SBuy:
		b, err := msg.(*SBuy).Marshal()
		return 1012, 0, b, err
	case *STempShop:
		b, err := msg.(*STempShop).Marshal()
		return 1013, 0, b, err
	case *SOverData:
		b, err := msg.(*SOverData).Marshal()
		return 1014, 0, b, err
	case *SCard:
		b, err := msg.(*SCard).Marshal()
		return 1015, 0, b, err
	case *SLoginPrize:
		b, err := msg.(*SLoginPrize).Marshal()
		return 1016, 0, b, err
	case *SUseProp:
		b, err := msg.(*SUseProp).Marshal()
		return 1017, 0, b, err
	case *SStart:
		b, err := msg.(*SStart).Marshal()
		return 1018, 0, b, err
	case *SShareInfo:
		b, err := msg.(*SShareInfo).Marshal()
		return 1019, 0, b, err
	case *SInviteInfo:
		b, err := msg.(*SInviteInfo).Marshal()
		return 1020, 0, b, err
	case *SShare:
		b, err := msg.(*SShare).Marshal()
		return 1021, 0, b, err
	case *SInvite:
		b, err := msg.(*SInvite).Marshal()
		return 1022, 0, b, err
	case *SGetRank:
		b, err := msg.(*SGetRank).Marshal()
		return 1023, 0, b, err
	case *SFight:
		b, err := msg.(*SFight).Marshal()
		return 1024, 0, b, err
	case *SFightMatch:
		b, err := msg.(*SFightMatch).Marshal()
		return 1025, 0, b, err
	case *SFightCreate:
		b, err := msg.(*SFightCreate).Marshal()
		return 1026, 0, b, err
	case *SFightEnter:
		b, err := msg.(*SFightEnter).Marshal()
		return 1027, 0, b, err
	case *SFightMatchExit:
		b, err := msg.(*SFightMatchExit).Marshal()
		return 1028, 0, b, err
	case *SFightUser:
		b, err := msg.(*SFightUser).Marshal()
		return 1029, 0, b, err
	case *SFightStart:
		b, err := msg.(*SFightStart).Marshal()
		return 1030, 0, b, err
	case *SFightingCancelGird:
		b, err := msg.(*SFightingCancelGird).Marshal()
		return 1031, 0, b, err
	case *SFightingScore:
		b, err := msg.(*SFightingScore).Marshal()
		return 1032, 0, b, err
	case *SFightingEnd:
		b, err := msg.(*SFightingEnd).Marshal()
		return 1033, 0, b, err
	default:
		return 0, 0, []byte{}, errors.New("unknown message")
	}
}